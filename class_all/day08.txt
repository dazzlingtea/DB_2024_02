day08. 인라인뷰, DML, 모델링, DDL

복습
	서브쿼리
		쿼리문 안에 또다른 쿼리문
		서브쿼리의 위치에 따라 구분한다

		1. FROM 절 : 인라인뷰
		2. WHERE 절 : 서브쿼리
		3. SELECT 절 : 스칼라 쿼리

	인라인뷰
		FROM 절안에 또다른 쿼리를 작성한다
		서브쿼리의 결과를 또다른 하나의 가상 테이블로 사용한다

ROWNUM
	쿼리 실행 결과에 부여되는 가상의 순번
	1. ROWNUM은 정렬 전에 부여된다(ORDER BY 전에)
	2. ROWNUM은 1번부터 시작해야 한다

SQL문의 종류

	1. DDL	: 데이터 정의 언어
	2. DML	: 데이터 조작 언어
	3. DCL	: 데이터 제어 언어(권한)
	4. TCL	: 트랜잭션 제어 언어

DML(Data Manipulation Language)
	1. SELECT : 데이터 조회
	2. INSERT : 데이터 추가(삽입)
	3. UPDATE : 데이터 수정
	4. DELETE : 데이터 삭제

SELECT
	테이블의 데이터를 조회한다

	SELECT 컬럼명
	FROM 테이블명;

INSERT
	테이블에 데이터를 삽입(추가)한다
	-> 테이블에 행을 추가한다
	
	1. 원하는 컬럼만 골라서 행을 추가하는 방법
		INSERT INTO 테이블명
		(컬럼명1, 컬럼명2) VALUES(값1, 값2);

	2. 모든 컬럼에 값을 채워서 행을 추가하는 방법
		INSERT INTO 테이블명
		VALUES(값1, 값2, 값3...);

	* 컬럼의 자료형에 알맞는 데이터를 입력해야 한다

UPDATE
	테이블의 데이터를 수정한다
	UPDATE문에 조건식을 사용하지 않으면 모든 데이터가 수정된다

	UPDATE 테이블명
	SET 컬럼명1 = 값1, 컬럼명2 = 값2....
	[WHERE 조건식];

DELETE
	테이블의 데이터를 삭제한다 -> 행을 삭제한다
	delete문에 조건식을 사용하지 않으면 모든 데이터가 삭제된다

	DELETE FROM 테이블명
	[WHERE 조건식];

엔티티(Entity)
	개체. 데이터의 집합. 인스턴스의 집합.
	업무에 필요한 정보가 담긴 어떤것(things)

	* 인스턴스 : 엔티티를 구성하는 하나의 값(행)
	ex) 유저 엔티티, 주문 엔티티, 상품 엔티티, 사원 엔티티, 부서 엔티티

속성(attribute)
	엔티티에 속하는 개체들의 특성.
	어떤것이 가지는 성격
	인스턴스의 의미상 더이상 분리되지 않는 최소의 데이터 단위
	* 도메인(domain) : 속성이 가질수 있는 값의 범위(속성에 대한
	타입, 크기, 제약사항)
	* 차수(degree) : 속성의 개수

	ex) 유저 엔티티를 구성하는 유저 인스턴스의 아이디, 비밀번호,
	생년월일 등...

관계(relationship)
	어떤것 간의 관계
	엔티티와 엔티티간의 연관성
	ERD(Entity Relationship Diagram) : 테이블들의 관계성을 표현한
	다이어그램

	ex) 유저 엔티티 - 주문 엔티티, 사원 엔티티 - 부서 엔티티

모델링
	데이터베이스 시스템에서 데이터의 구조와 관계를 설계하는것
	1. 개념적 모델링
		엔티티 도출. 비즈니스 요구사항 분석

	2. 논리적 모델링
		정규화. 데이터의 속성, 키, 엔티티들의 관계 정의

	3. 물리적 모델링
		엔티티를 데이터베이스의 테이블로 구현
		테이블, 인덱스, 키, 제약 조건 등을 정의

데이터의 무결성
	데이터의 정확성, 일관성, 유효성을 유지하여 결함없는 데이터를
	유지 및 사용하는것

	1. 개체 무결성 : 모든 테이블은 하나의 기본키를 가진다
	2. 참조 무결성 : 두 테이블의 데이터가 항상 일관된 값을 가진다
	3. 도메인 무결성 : 속성에 따른 올바른 데이터를 입력한다
	(자료형, NULL값 허용 여부 등)

키(key)
	데이터베이스 내의 행을 고유하게 식별하거나 검색하는데
	사용되는 하나 이상의 속성(열)의 조합

	1. 모델링에서 사용
		기본키, 외래키, 후보키, 대체키, 슈퍼키

	2. 테이블에서 사용
		기본키, 외래키

키의 종류
	학생 엔티티
	====================
	학생번호, 이름, 나이, 성별, 주민번호 -> 속성(열)

	1, 홍길동, 19, 남자, 1234567...
	2, 홍길동, 19, 남자, 1234568...
	3, 나길동, 20, 여자, 1234569...

	1. 슈퍼키(super key)
		행을 고유하게 식별하기 위한 속성 또는 속성의 조합
		(학생번호), (주민번호), (이름, 주민번호)...

	2. 후보키(candidate key)
		기본키가 될수 있는 값(기본키의 후보)
		(학생번호), (주민번호)

	3. 기본키(primary key)
		테이블 내의 각 행을 고유하게 식별하는데 사용한다
		* 중복이 허용되지 않는다
		* NULL값이 허용되지 않는다
		(학생번호)

	4. 대체키(alternate key)
		후보키가 2개 이상일때 기본키를 제외한 나머지 후보키들
		(주민번호)

	5. 외래키(foreign eky)
		외래키를 사용하여 두 테이블간의 관계를 설정하고
		참조 무결성을 유지한다
		-> 다른 테이블의 기본키를 참조하는 속성

제약조건(constraint)

	1. PRIMARY KEY(PK)
		각 행을 고유하게 식별하기 위해 사용한다
		* 중복이 없다
		* NULL값을 허용하지 않는다

	2. FOREIGN KEY(FK)
		보통 테이블끼리의 관계를 맺을 때 사용한다(참조무결성)
		다른 테이블의 PK를 사용하고 중복이 가능하다
		* NULL값이 허용된다

	3. UNIQUE(UK)
		해당 컬럼에서 중복값이 없는 고유값으로 사용해야 한다
		* 중복이 없다
		* NULL값이 허용된다
	
	4. CHECK(CK)
		컬럼의 값이 특정 조건을 만족해야 한다
		-> 값의 범위나 조건을 사용
	
	5. NOT NULL
		해당 컬럼의 값은 NULL이 허용되지 않는다
	
	6. DEFAULT
		해당 컬럼의 값이 입력되지 않을 경우, 기본값으로 입력된다
		지정하지 않으면 기본값으로 NULL을 사용한다

개념 모델링
	1. 요구사항
		- 모든 유저는 아이디, 비밀번호, 나이, 이메일, 포인트 금액을 가진다
		- 모든 유저는 아이디를 가지고, 중복된 아이디를 가질수 없다
		- 모든 유저는 비밀번호를 가진다
		- 모든 유저가 나이를 가지지는 않지만, 나이를 가질경우 0 이상이어야 한다
		- 모든 유저가 이메일을 가지지는 않지만, 이메일을 가질 경우 중복될수 없다
		- 모든 유저의 기본 포인트 금액은 0원이다

	2. 엔티티 도출
		유저 엔티티
		엔티티의 속성 : 아이디, 비밀번호, 나이, 이메일, 포인트 금액

논리 모델링
	1. 데이터 속성 정의
		- 아이디 : 문자. 중복 불가. 필수
		- 비밀번호 : 문자. 필수
		- 나이 : 정수. 나이 >= 0. 선택.
		- 이메일 : 문자. 중복 불가. 선택.
		- 포인트 금액 : 정수. 기본값 0
	2. 키 정의
		유저 엔티티의 기본키(PK) : 유저 아이디

물리 모델링
	테이블명 : TBL_USER
	=================================
	아이디		USER_ID		VARCHAR2(100)	PRIMARKY KEY
	비밀번호		USER_PASSWORD	VARHCAR2(100)	NOT NULL
	나이		USER_AGE	NUMBER		CHECK(USER_AGE >= 0)
	이메일		USER_EMAIL	VARCHAR2(100)	UNIQUE
	포인트금액	USER_POINT	NUMBER		DEFAULT 0

DDL(Data Definition Language) 
	데이터 정의어
	테이블 조작, 제어 관련 쿼리문

	1. CREATE : 테이블 생성
	2. ALTER : 테이블 수정
	3. DROP : 테이블 삭제
	4. TRUNCATE : 테이블의 데이터 전체 삭제

CREATE
	테이블 생성한다

	CREATE TABLE 테이블명
	(	컬럼명1 자료형 제약조건,
		컬럼명2 자료형 제약조건,
		...
	);

	* 제약 조건 정의 방법
		1. 컬럼 레벨 정의 : 하나의 컬럼을 정의하면서 같이 정의
		2. 테이블 레벨 정의 : CREATE 쿼리 마지막에 모아서 정의

데이터베이스 명명 규칙
	1. 이름은 중복 불가
	2. 문자로 시작해야 한다 1t(X) t1(O)
	3. 특수문자는 _, $, # 사용 가능
	4. 예약어 사용 불가
	5. 공백 사용 불가(띄어쓰기 불가)
	6. 가능하면 영어로 작성한다
	7. 최대 30글자까지 가능









	














































	












	





























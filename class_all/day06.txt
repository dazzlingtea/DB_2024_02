day06. 검색CASE 표현식, 조인(JOIN)

SELECT 정리
	SELECT [DISTINCT] 컬럼명 [AS ALIAS]
	FROM 테이블명
	WHERE 조건식
	GROUP BY 그룹 기준 컬럼
	HAVING 그룹 조건식
	ORDER BY 정렬 기준 컬럼[ASC 또는 DESC];

	1. DISTINCT : 중복 제거
	2. ALIAS : 별칭

조인(JOIN)
	여러개의 테이블에 흩어져 있는 정보 중
	사용자가 필요한 정보만 가져와서 가상의 테이블처럼
	만들고 결과를 보여주는 것
	
	여러개의 테이블을 연결하는것
	1. 내부조인 INNER JOIN
		-EQUI JOIN 등가조인
		-NON-EQUI JOIN 비등가 조인
		-NATURAL JOIN 내추럴 조인

	2. 외부조인 OUTER JOIN
		-LEFT OUTER JOIN
		-RIGHT OTTER JOIN
		-FULL OUTER JOIN

	3. 상호조인 CROSS JOIN
		-CROSS JOIN 교차 조인
	4. 내부조인 INNER JOIN

안시(ANSI) 조인과 오라클 조인
	
	ANSI 조인(오라클 10g 버전부터)
	-> 데이터베이스 종류와 상관없이 모든 데이터베이스에 사용가능
	* ANSI : 미국 국가 표준 협회
	
	ORACLE 조인(오라클 9i 버전까지)
	-> 오라클 데이터베이스에서만 사용 가능

내부조인 INNER JOIN
	1.등가조인
	2.비등가 조인
	3.내추럴 조인

각 테이블의 행과 열이 다를 수 있음
기준 컬럼의 값이 서로 일치하는 행을 가져옴

등가조인 (EQUI JOIN)
	두 테이블간의 컬럼의 값이 서로 일치할때 사용한다
	조인조건에 등호(=)가 있을 때 사용한다

	* 일반적으로 PK <-> FK 관계를 이용하여 조인을 주로 사용한다
	* FROM 절에서 테이블 별칭을 사용했다면 조인조건에서 
	별칭을 사용해야 한다

	1.오라클
	SELECT 테이블1.컬럼명, 테이블2.컬럼명...
	FROM 테이블1, 테이블2
	WHERE 테이블1.컬럼명 = 테이블2.컬럼명;
	
	WHERE : 테이블의 조인조건과 조회 조건을 작성
	N개의 테이블을 조인할 때 필요한 조인조건의 수
	= N - 1
	
	2.안시
	SELECT 테이블1.컬럼명, 테이블2.컬럼명...
	FROM 테이블1 [INNER] JOIN 테이블2
	ON 테이블1.컬럼명 = 테이블2.컬럼명
	WHERE 조회 조건식;
	
	ON : 테이블의 조인 조건
	WHERE : 데이터 조회 조건

비등가 (NON EQUI JOIN)
	조인조건에 등호(=)가 없을 때 사용한다
	특정 컬럼의 값이 서로 일치하지 않는 경우

	* >, >=, <, <=, BETWEEN 등의 연산자를 사용하는 경우

	1.오라클
	SELECT 테이블1.컬럼명, 테이블2.컬럼명...
	FROM 테이블1, 테이블2
	WHERE 테이블1.컬럼명 BETWEEN 테이블2.컬럼명 AND 테이블2.컬럼명;	

	2.안시
	SELECT 테이블1.컬럼명, 테이블2.컬럼명...
	FROM 테이블1 [INNER] JOIN 테이블2
	ON 테이블1.컬럼명 BETWEEN 테이블2.컬럼명 AND 테이블2.컬럼명;
	WHERE 조회 조건식;	

내추럴 조인(NATURAL JOIN)
	동일한 이름의 모든 컬럼들에 대해 등가 조인을 수행한다
	조인되는 컬럼들의 이름과 자료형이 일치해야 한다
	* 조인조건을 USING, ON, WHERE 절에서 지정하지 못한다
	
	SELECT 공통 컬럼명, 테이블1.컬럼명, 테이블2.컬럼명
	FROM 테이블1 NATURAL JOIN 테이블2;


외부조인(OUTER JOIN)
	1. LEFT OUTER JOIN
	2. RIGHT OUTER JOIN
	3. FULL OUTER JOIN

	* 조인조건을 만족하지 않는 행들도 함께 조회한다

LEFT OUTER JOIN
	왼쪽 테이블이 기준테이블이 되며, 기준테이블의 조인조건을
	만족하는 행과 만족하지 않는 모든 행을 조회한다
	기준테이블은 모든 행 가져오고 비어있는 오른쪽은 NULL로 채움

	1.오라클  * 기준테이블 : 왼쪽
		SELECT 테이블1.컬럼명, 테이블2.컬럼명...
		FROM 테이블1, 테이블2
		WHERE 테이블1.컬럼명 = 테이블2.컬럼명(+);
		
		* (+) 반대편이 기준 테이블이 된다
	2.안시
		SELECT 테이블1.컬럼명, 테이블2.컬럼명...
		FROM 테이블1
		LEFT OUTER JOIN 테이블2
		ON 테이블1.컬럼명 = 테이블2.컬럼명;

RIGHT OUTER JOIN
	오른쪽 테이블이 기준테이블이 되며, 기준테이블의 조인조건을
	만족하는 행과 만족하지 않는 모든 행을 조회한다
	기준테이블은 모든 행 가져오고 비어있는 왼쪽은 NULL로 채움

	1.오라클  * 기준테이블 : 오른쪽
		SELECT 테이블1.컬럼명, 테이블2.컬럼명...
		FROM 테이블1, 테이블2
		WHERE 테이블1.컬럼명 = 테이블2.컬럼명(+);
		
		* (+) 반대편이 기준 테이블이 된다
	2.안시
		SELECT 테이블1.컬럼명, 테이블2.컬럼명...
		FROM 테이블1
		RIGHT OUTER JOIN 테이블2
		ON 테이블1.컬럼명 = 테이블2.컬럼명;

OUTER JOIN의 핵심
	왼쪽 또는 오른쪽 테이블이 기준 테이블이 되어
	기준 테이블의 조인 조건을 만족하지 않는 행들도 조회한다
	
	* 단, 반대편 테이블의 행은 조인조건을 만족하지 않는 행들을
	가져올때 NULL로 채워서 가져오게 된다
	
	* 조회결과를 봤을 때 오른쪽 테이블 행에 NULL이 존재한다
		-> LEFT OUTER JOIN
	* 조회결과를 봤을 때 왼쪽 테이블 행에 NULL이 존재한다
		-> RIGHT OUTER JOIN
FULL OUTER JOIN
	LEFT OUTER JOIN + RIGHT OUTER JOIN
	* 조인조건을 만족하는 행들은 1번만 표시한다
	
	1.안시
		SELECT 테이블1.컬럼명, 테이블2.컬럼명...
		FROM 테이블1 FULL OUTER JOIN 테이블2
		ON 테이블1.컬럼명 = 테이블2.컬럼명;
	
	-> 오라클 X, 양쪽에 (+) 있을 수 없음

CROSS JOIN
	두개의 테이블간의 모든 가능한 조합을 생성한다
	* 조인조건을 지정하지 않고 사용한다
	* 테이블1 행의 수 X 테이블2 행의 수 결과를 반환한다
	* 카테시안의 곱이라고도 부른다 (CARTESIAN PRODUCT)
	
	1.안시
		SELECT 테이블1.컬럼명, 테이블2.컬럼명
		FROM 테이블1 CROSS JOIN 테이블2;
	2.오라클
		SELECT 테이블1.컬럼명, 테이블2.컬럼명
		FROM 테이블1, 테이블2;

--> 조인을 쓴다는건 기존과 다른 테이블이 된다








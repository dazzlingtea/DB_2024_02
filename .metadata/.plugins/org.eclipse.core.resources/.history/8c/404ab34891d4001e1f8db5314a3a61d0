/*
 * 검색 CASE 표현식
 */
-- 일치하지 않으면 다음 WHEN절로 넘어간다
-- 급여가 10000 이상이면 상위
-- 급여가 6000 이상이면 중위
-- 급여가 1000 이상이면 하위

SELECT employee_id, salary
   ,CASE
      WHEN salary >= 10000 THEN '상위'
      WHEN salary >= 6000 THEN '중위'
      WHEN salary >= 1000 THEN '하위'
   END
FROM employees;

SELECT employee_id, salary
   ,CASE
      WHEN salary >= 10000 THEN '상위'
      WHEN salary >= 6000 THEN '중위'
      ELSE '하위'
   END
FROM employees;

   
SELECT employee_id, salary
   ,CASE
      WHEN salary >= 1000 THEN '하위'
      WHEN salary >= 6000 THEN '중위'
      WHEN salary >= 10000 THEN '상위'
   END
FROM employees;

-- 단순 CASE 표현식과 NULL
-- 커미션 비율이 존재하면 Y, 존재하지 않으면 N
-- =(비교연산자)를 사용하므로 NULL을 판단하지 못한다
SELECT employee_id, commission_pct
	,CASE commission_pct WHEN NULL THEN 'N'
		ELSE 'Y'
	END AS "커미션 존재 여부"
FROM employees;


-- 검색 CASE 표현식과 NULL
SELECT employee_id, commission_pct
	,CASE WHEN commission_pct IS NULL THEN 'N'
		ELSE 'Y'
	END AS "커미션 존재 여부"
FROM employees;

/*
 * 실습.
 * 법정 최저급여가 3300일때, 사원들의 평균 급여 구하기
 * 급여가 3300 미만 사원 : 3300으로 급여 적용
 * 급여가 3300 이상 사원 : 기존 급여 적용
 */
SELECT employee_id, salary CASE WHEN salary < 3300 THEN 3300
	END AS "평균 급여"
FROM employees;


/*
 * 실습.
 * 법정 최저급여가 3300일 때 최저급여를 위반하는 사원과
 * 최저급여를 충족하는 사원의 수, 총 사원의 수 구하기
 */
















